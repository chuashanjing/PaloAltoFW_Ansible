---
- name: Palo Alto Playbook
  hosts: palo
  gather_facts: false
  connection: local

  collections:
  - paloaltonetworks.panos
  - cyberark.pas


  tasks:
  
    - name: credential retrieval
      cyberark.pas.cyberark_credential:
        api_base_url: "<https://cyberark.example.com>"
        validate_certs: "false"
        app_id: "<ansible>"
        aim_object: "<target_system_object_name>"
        reason: "requesting credential for ansible deployment"
        connection_timeout: 60
        query: "Safe=test;UserName=admin"
        query_format: "Exact"
        fail_request_on_password_change: True
      register: ca_cred
      delegate_to: localhost
      no_log: true

    - name: Set ansible_password to remote node
      ansible.builtin.set_fact:
        provider:
          ip_address: "{{ ansible_host }}"
          ansible_user: "{{ ansible_user }}"
          ansible_password: "{{ ca_cred.result.Content }}"
      no_log: true

    - name: Ensure all WildFire session information settings are enabled
      panos_type_cmd:
        provider: '{{ provider }}'
        xpath: /config/devices/entry[@name='localhost.localdomain']/deviceconfig/setting/wildfire/session-info-select
        element: |
          <exclude-app-name>no</exclude-app-name>
          <exclude-dest-ip>no</exclude-dest-ip>
          <exclude-dest-port>no</exclude-dest-port>
          <exclude-email-recipient>no</exclude-email-recipient>
          <exclude-email-sender>no</exclude-email-sender>
          <exclude-email-subject>no</exclude-email-subject>
          <exclude-filename>no</exclude-filename>
          <exclude-src-ip>no</exclude-src-ip>
          <exclude-src-port>no</exclude-src-port>
          <exclude-url>no</exclude-url>
          <exclude-username>no</exclude-username>
          <exclude-vsys-id>no</exclude-vsys-id>
    
    - name: before
      panos_type_cmd:
        provider: '{{ provider }}'
        xpath: /config/devices/entry[@name='localhost.localdomain']/deviceconfig/setting/wildfire/session-info-select
        cmd: 'show'
      register: before
      ignore_errors: yes

    - name: Commit configuration
      panos_commit_firewall:
        provider: "{{ provider }}"


    - name: after
      panos_type_cmd:
        provider: '{{ provider }}'
        xpath: /config/devices/entry[@name='localhost.localdomain']/deviceconfig/setting/wildfire/session-info-select
        cmd: 'show'
      register: after

    - debug: msg="{{ after }}"

    - debug: msg="Forwarding of decrypted content to wildfire is enabled successfully"
      when: before != after

    - debug: msg="No changes made"
      when: before == after
...