---
- name: Palo Alto Playbook
  hosts: palo
  gather_facts: false
  connection: local

  collections:
  - paloaltonetworks.panos
  - cyberark.pas



  tasks:
  
    - name: credential retrieval
      cyberark.pas.cyberark_credential:
        api_base_url: "<https://cyberark.example.com>"
        validate_certs: "false"
        app_id: "<ansible>"
        aim_object: "<target_system_object_name>"
        reason: "requesting credential for ansible deployment"
        connection_timeout: 60
        query: "Safe=test;UserName=admin"
        query_format: "Exact"
        fail_request_on_password_change: True
      register: ca_cred
      delegate_to: localhost
      no_log: true

    - name: Set ansible_password to remote node
      ansible.builtin.set_fact:
        provider:
          ip_address: "{{ ansible_host }}"
          ansible_user: "{{ ansible_user }}"
          ansible_password: "{{ ca_cred.result.Content }}"
      no_log: true
    
    - name: Check for enabled services
      panos_type_cmd:
        provider: '{{ provider }}'
        xpath: /config/devices/entry[@name='localhost.localdomain']/deviceconfig/system/service
        cmd: 'show'
      register: services

    - debug: msg="{{ services }}"

    - name: Ensure HTTP and Telnet options are disabled for management interface
      panos_type_cmd:
        provider: '{{ provider }}'
        xpath: /config/devices/entry[@name='localhost.localdomain']/deviceconfig/system/service
        element: '<disable-telnet>yes</disable-telnet><disable-http>yes</disable-http>'

    - name: Commit
      panos_commit_firewall:
        provider: '{{ provider }}'

    - name: Check for enabled services
      panos_type_cmd:
        provider: '{{ provider }}'
        xpath: /config/devices/entry[@name='localhost.localdomain']/deviceconfig/system/service
        cmd: 'show'
      register: services2

    - debug: msg="{{ services2 }}"
      
    - name: Success
      debug: msg="No changes made"
      when: services.stdout == services2.stdout

    - name: Fail
      debug: msg="Disabled Telnet and HTTP successfully"
      when: services.stdout != services2.stdout
   
...