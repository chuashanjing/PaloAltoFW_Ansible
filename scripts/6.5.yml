---
- name: Palo Alto Playbook
  hosts: palo
  gather_facts: false
  connection: local

  collections:
  - paloaltonetworks.panos
  - cyberark.pas

 

  tasks:
  
    - name: credential retrieval
      cyberark.pas.cyberark_credential:
        api_base_url: "<https://cyberark.example.com>"
        validate_certs: "false"
        app_id: "<ansible>"
        aim_object: "<target_system_object_name>"
        reason: "requesting credential for ansible deployment"
        connection_timeout: 60
        query: "Safe=test;UserName=admin"
        query_format: "Exact"
        fail_request_on_password_change: True
      register: ca_cred
      delegate_to: localhost
      no_log: true

    - name: Set ansible_password to remote node
      ansible.builtin.set_fact:
        provider:
          ip_address: "{{ ansible_host }}"
          ansible_user: "{{ ansible_user }}"
          ansible_password: "{{ ca_cred.result.Content }}"
      no_log: true

    - name: Ensure an anti-spyware profile is configured to block on all spyware severity levels, categories, and threats
      panos_type_cmd:
        provider: '{{ provider }}'
        xpath: |
          /config/devices/entry[@name='localhost.localdomain']
          /vsys/entry[@name='vsys1']
          /profiles/spyware/entry[@name='AntiSpywareProfile2']
        cmd: 'set'
        element: |
          <botnet-domains>
            <lists>
              <entry name="default-paloalto-dns"><action><sinkhole></sinkhole></action><packet-capture>disable</packet-capture></entry>
            </lists>
            <dns-security-categories>
              <entry name="pan-dns-sec-cc"><log-level>default</log-level><action>default</action><packet-capture>disable</packet-capture></entry>
              <entry name="pan-dns-sec-ddns"><log-level>default</log-level><action>default</action><packet-capture>disable</packet-capture></entry>
              <entry name="pan-dns-sec-grayware"><log-level>default</log-level><action>default</action><packet-capture>disable</packet-capture></entry>
              <entry name="pan-dns-sec-malware"><log-level>default</log-level><action>default</action><packet-capture>disable</packet-capture></entry>
              <entry name="pan-dns-sec-parked"><log-level>default</log-level><action>default</action><packet-capture>disable</packet-capture></entry>
              <entry name="pan-dns-sec-phishing"><log-level>default</log-level><action>default</action><packet-capture>disable</packet-capture></entry>
              <entry name="pan-dns-sec-proxy"><log-level>default</log-level><action>default</action><packet-capture>disable</packet-capture></entry>
              <entry name="pan-dns-sec-recent"><log-level>default</log-level><action>default</action><packet-capture>disable</packet-capture></entry></dns-security-categories>
            <sinkhole>
            <ipv4-address>pan-sinkhole-default-ip</ipv4-address>
            <ipv6-address>::1</ipv6-address>
            </sinkhole></botnet-domains><rules>
            <entry name="block">
              <action><drop/></action>
              <severity><member>any</member></severity>
              <threat-name>any</threat-name>
              <category>any</category>
              <packet-capture>disable</packet-capture>
            </entry>
          </rules>

    - name: Ensure a secure antispyare profile is applied to all relevant security policies
      panos_type_cmd:
        provider: '{{ provider }}'
        xpath: |
          /config/devices/entry[@name='localhost.localdomain']
          /vsys/entry[@name='vsys1']
          /rulebase/security/rules
        cmd: 'set'
        element: |
          <entry name="Antispyware Security Rule2">
            <to>
              <member>any</member>
            </to>
            <from>
              <member>any</member>
            </from>
            <source>
              <member>any</member>
            </source>
            <destination>
              <member>any</member>
            </destination>
            <category>
              <member>any</member>
            </category>
            <application>
              <member>any</member>
            </application>
            <service>
              <member>any</member>
            </service>
            <source-hip>
              <member>any</member>
            </source-hip>
            <destination-hip>
              <member>any</member>
            </destination-hip>
            <action>allow</action>
            <profile-setting>
              <profiles>
                <spyware>
                  <member>AntiSpywareProfile2</member>
                </spyware>
              </profiles>
            </profile-setting>
          </entry>
    
    - name: before
      panos_type_cmd:
        provider: '{{ provider }}'
        xpath: |
          /config/devices/entry[@name='localhost.localdomain']
          /vsys/entry[@name='vsys1']
          /rulebase/security/rules
        cmd: 'show'
      register: before
      ignore_errors: yes

    - name: before1
      panos_type_cmd:
        provider: '{{ provider }}'
        xpath: |
          /config/devices/entry[@name='localhost.localdomain']
          /vsys/entry[@name='vsys1']
          /profiles/spyware
        cmd: 'show'
      register: before1

    - name: Commit configuration
      panos_commit_firewall:
        provider: '{{ provider }}'

    - name: after
      panos_type_cmd:
        provider: '{{ provider }}'
        xpath: |
          /config/devices/entry[@name='localhost.localdomain']
          /vsys/entry[@name='vsys1']
          /rulebase/security/rules
        cmd: 'show'
      register: after

    - name: after1
      panos_type_cmd:
        provider: '{{ provider }}'
        xpath: |
          /config/devices/entry[@name='localhost.localdomain']
          /vsys/entry[@name='vsys1']
          /profiles/spyware
        cmd: 'show'
      register: after1

    - debug: msg="Configured anti-spyware profile and anti-spyware rule successfully"
      when: before != after and before1 != after1

    - debug: msg="No changes made"
      when: before == after and before1 == after1
...