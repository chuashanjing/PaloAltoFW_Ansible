---
- name: Palo Alto Playbook
  hosts: palo
  gather_facts: false
  connection: local

  collections:
  - paloaltonetworks.panos
  - cyberark.pas



  tasks:
  
    - name: credential retrieval
      cyberark.pas.cyberark_credential:
        api_base_url: "<https://cyberark.example.com>"
        validate_certs: "false"
        app_id: "<ansible>"
        aim_object: "<target_system_object_name>"
        reason: "requesting credential for ansible deployment"
        connection_timeout: 60
        query: "Safe=test;UserName=admin"
        query_format: "Exact"
        fail_request_on_password_change: True
      register: ca_cred
      delegate_to: localhost
      no_log: true

    - name: Set ansible_password to remote node
      ansible.builtin.set_fact:
        provider:
          ip_address: "{{ ansible_host }}"
          ansible_user: "{{ ansible_user }}"
          ansible_password: "{{ ca_cred.result.Content }}"
      no_log: true

    - name: Ensure HTTP and Telnet options are disabled for all management profiles
      panos_management_profile:
        provider: '{{ provider }}'
        name: '{{ item.name }}'
        http: false
        telnet: false
        https: true
        ssh: true
        snmp: true #
      loop:
        - { name: Interface Management }
        #- { name: interface profile }
        #- { name: interface profile }
   
    - name: Show interface management
      panos_type_cmd:
        provider: '{{ provider }}'
        cmd: 'show'
        xpath: |
          /config/devices/entry[@name='localhost.localdomain']
          /network/profiles/interface-management-profile
      register: intmgt
      ignore_errors: yes

    #- debug: msg="{{ intmgt.stdout }}"

    - name: Commit configuration
      panos_commit_firewall:
        provider: '{{ provider }}'
      ignore_errors: yes

    - name: Show interface management
      panos_type_cmd:
        provider: '{{ provider }}'
        cmd: 'show'
        xpath: |
          /config/devices/entry[@name='localhost.localdomain']
          /network/profiles/interface-management-profile
      register: intmgt2
      ignore_errors: yes

    #- debug: msg="{{ intmgt2.stdout }}"

    - name: Success
      debug: msg="Disabled HTTP and telnet for all management profiles successfully"
      when: intmgt.stdout != intmgt2.stdout

    - name: No changes made
      debug: >
        msg="No changes were made. Configured Values:
        {{ intmgt2.stdout }}"
      when: intmgt.stdout == intmgt2.stdout


    
...